//sets font color based on the background's darkness
@function set-font-color($background-color) {
  $color-scale: 50;
  $light-color: #fff;
  $dark-color: #000;
  @if (blackness($background-color) >= $color-scale) {
    @return $light-color;
  } @else {
    @return $dark-color;
  }
}

//Responsive Clamp function with 1rem = 16px
@function clamp-calc($min_viewport, $max_viewport, $min_font_size, $max_font_size){
  $min_font_size_rem: calc($min_font_size * 1rem);
  // Calculate dynamic values based on formula
  $viewport_difference: calc($max_viewport - $min_viewport);
  $font_size_difference: calc($max_font_size - $min_font_size);
  $yy: calc(100 * $font_size_difference / $viewport_difference);
  $xx: calc($min_viewport / 100);

  @return clamp($min_font_size, calc($min_font_size_rem + ((1vw - $xx) * $yy)), $max_font_size);
}

//Background image with Dark Overlay -- ($opacity range: 0.1 - 1.0)
@function bg-img-dark-overlay($imagePath, $opacity1, $opacity2) {
  @return linear-gradient(rgba(0, 0, 0, $opacity1), rgba(0, 0, 0, $opacity2)),
  url($imagePath);
}

//centers element right on the center, the parent needs to be Positioned relative.
@mixin absoluteCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

//dark overlay (requires dark-overlay div inside relative parent)
@mixin dark-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
}


